var documenterSearchIndex = {"docs":
[{"location":"documentation/SpectralDensities/#Spectral-Densities","page":"Spectral Densities","title":"Spectral Densities","text":"","category":"section"},{"location":"documentation/SpectralDensities/","page":"Spectral Densities","title":"Spectral Densities","text":"The interaction of a quantum system with a condensed phase environment is often captured through the spectral density. QuantumDynamics has a built-in support for a few of the most common spectral densities and allows for easy incorporation of other spectral densities.","category":"page"},{"location":"documentation/SpectralDensities/#Description","page":"Spectral Densities","title":"Description","text":"","category":"section"},{"location":"documentation/SpectralDensities/","page":"Spectral Densities","title":"Spectral Densities","text":"SpectralDensities","category":"page"},{"location":"documentation/SpectralDensities/#QuantumDynamics.SpectralDensities","page":"Spectral Densities","title":"QuantumDynamics.SpectralDensities","text":"Collection of spectral densities commonly used to describe solvents.\n\n\n\n\n\n","category":"module"},{"location":"documentation/SpectralDensities/","page":"Spectral Densities","title":"Spectral Densities","text":"SpectralDensities.ExponentialCutoff","category":"page"},{"location":"documentation/SpectralDensities/#QuantumDynamics.SpectralDensities.ExponentialCutoff","page":"Spectral Densities","title":"QuantumDynamics.SpectralDensities.ExponentialCutoff","text":"ExponentialCutoff(; ξ, ωc, n=1.0, Δs=2.0)\n\nConstruct a model spectral density with an exponential cutoff.\n\nJ(ω) = frac2πΔs^2 ξ fracω^nω_c^n-1 expleft(-fracωωcright)\n\nwhere Δs is the distance between the two system states. The model is Ohmic if n = 1, sub-Ohmic if n < 1, and super-Ohmic if n > 1.\n\n\n\n\n\n","category":"type"},{"location":"documentation/SpectralDensities/","page":"Spectral Densities","title":"Spectral Densities","text":"SpectralDensities.DrudeLorentzCutoff","category":"page"},{"location":"documentation/SpectralDensities/#QuantumDynamics.SpectralDensities.DrudeLorentzCutoff","page":"Spectral Densities","title":"QuantumDynamics.SpectralDensities.DrudeLorentzCutoff","text":"DrudeLorentzCutoff(; λ, γ, n=1.0, Δs=2.0)\n\nConstruct a model spectral density with a Drude-Lorentz cutoff.\n\nJ(ω) = frac2λΔs^2 fracω^n γ^2-nω^2 - γ^2\n\nwhere Δs is the distance between the two system states. The model is Ohmic if n = 1, sub-Ohmic if n < 1, and super-Ohmic if n > 1.\n\n\n\n\n\n","category":"type"},{"location":"tutorial/QuAPI/#Quasi-Adiabatic-Propagator-Path-Integral","page":"QuAPI","title":"Quasi-Adiabatic Propagator Path Integral","text":"","category":"section"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"Quasi-Adiabatic Propagator Path Integral (QuAPI) is one of the foundational numerically exact techniques for simulating a quantum system interacting with a harmonic environment. It simulates the reduced density matrix of an n-level quantum system using path integrals and the harmonic bath is incorporated through the Feynman-Vernon influence functional. The tracing out of the harmonic bath leads to a non-Markovian memory, which is used as a convergence parameter.","category":"page"},{"location":"tutorial/QuAPI/#Using-the-QuAPI-module-of-QuantumDynamics","page":"QuAPI","title":"Using the QuAPI module of QuantumDynamics","text":"","category":"section"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"To use the QuAPI model, one needs to first set up the system and the harmonic bath. Suppose we are simulating a classical spin-boson Hamiltonian, then the system Hamiltonian is given as","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"H0 = [0.0 -1.0; -1.0 0.0]","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"and the solvent Hamiltonian is described by a spectral density chosen here to be the Ohmic spectral density with an exponential cutoff held at an inverse temperature \\beta = 5.0:","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"using QuantumDynamics\nJw = SpectralDensities.ExponentialCutoff(ξ=0.1, ωc=7.5)\nβ = 5.0","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"With the main system having been specified, we need to pick a proper time-step, which is a convergence parameter.","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"dt = 0.25\nntimes = 100\ntime = 0:dt:dt*ntimes;","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"We simulate the dynamics for a sequence of increasing non-Markovian memory lengths, kmax:","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"ρ0 = [1.0 0; 0 0]\nsigma_z = []\nkmax = 1:2:9\nfor k in kmax\n    ρs = QuAPI.propagate(; Hamiltonian=H0, Jw, β, ρ0, dt, ntimes, kmax=k)\n    push!(sigma_z, real(ρs[1,1,:] - ρs[2,2,:]))\nend","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"The dynamics can now be simply plotted.","category":"page"},{"location":"tutorial/QuAPI/","page":"QuAPI","title":"QuAPI","text":"using Plots, LaTeXStrings\ncolors = [\"red\" \"green\" \"blue\" \"teal\" \"magenta\"]\nplot(time, sigma_z, lw = 2, label=permutedims([L\"k = %$k\" for k in kmax]), size=(800, 600), seriescolor=colors)\nxlabel!(L\"t\")\nylabel!(L\"\\langle\\sigma_z(t)\\rangle\")","category":"page"},{"location":"#Quantum-Dynamics","page":"Introduction","title":"Quantum Dynamics","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"QuantumDynamics is an open-source software for the simulation of open quantum systems. Though written with performance in mind, QuantumDynamics provides a high throughput platform for experimentation with state-of-the-art approaches to method development.","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The QuantumDynamics package has not yet been registered. For the time being, the installation procedure directly uses the github repository. This can either be done by going into the package manager mode for julia","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"~ julia","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> ]\npkg> add https://github.com/amartyabose/QuantumDynamics","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"or by using the Pkg package manager in a script:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> using Pkg\njulia> Pkg.add(\"https://github.com/amartyabose/QuantumDynamics\")","category":"page"}]
}
